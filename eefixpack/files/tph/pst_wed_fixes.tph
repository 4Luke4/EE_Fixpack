// This function updates WED file offsets by the specified amount
DEFINE_PATCH_FUNCTION a7_update_wed_offsets
INT_VAR
  // Offset to the resource field which contains the value to be compared to file offsets.
  // Base offset and offsets less (or equal) to the base_offset value are excluded from the update.
  base_offset = 0
  // Number of bytes to add to matching offsets. Can be a positive or negative value.
  amount      = 0
BEGIN
  PATCH_IF (amount != 0) BEGIN
    READ_LONG base_offset base_value

    // updating overlay offsets
    READ_LONG 0x8 overlays_num
    READ_LONG 0x10 overlays_off
    FOR (i = 0; i < overlays_num; ++i) BEGIN    // scanning overlay entries
      SET off = overlays_off + (i * 24)
      PATCH_FOR_EACH rel_off IN 0x10 0x14 BEGIN // tilemap and index lookup offsets
        SET cur_off = off + rel_off
        PATCH_IF (cur_off != base_offset) BEGIN // exclude base offset
          READ_LONG cur_off value
          PATCH_IF ((value > base_value) OR
                    ((value = base_value) AND (cur_off > base_offset))) BEGIN
            WRITE_LONG cur_off (THIS + amount)
          END
        END
      END
    END

    // updating secondary header offsets
    READ_LONG 0x14 header_off
    PATCH_FOR_EACH rel_off IN 0x4 0x8 0xc 0x10 BEGIN  // polygons, vertices, wallgroups and lookup offsets
      SET cur_off = header_off + rel_off
      PATCH_IF (cur_off != base_offset) BEGIN         // exclude base offset
        READ_LONG cur_off value
        PATCH_IF ((value > base_value) OR
                  ((value = base_value) AND (cur_off > base_offset))) BEGIN
          WRITE_LONG cur_off (THIS + amount)
        END
      END
    END

    // updating absolute offsets
    PATCH_FOR_EACH cur_off IN 0x10 0x14 0x18 0x1c BEGIN // overlays, 2nd header, doors and door tile offsets
      PATCH_IF (cur_off != base_offset) BEGIN           // exclude base offset
        READ_LONG cur_off value
        PATCH_IF ((value > base_value) OR
                  ((value = base_value) AND (cur_off > base_offset))) BEGIN
          WRITE_LONG cur_off (THIS + amount)
        END
      END
    END
  END
END


// removing bogus data
COPY_EXISTING ~ar0609.wed~ ~override~
              ~ar0612.wed~ ~override~
  PATCH_IF (LONG_AT 0x1c = 0x14ac) BEGIN  // sanity check
    READ_LONG 0x10 overlays_off
    // only first overlay structure is relevant
    READ_LONG (overlays_off + 0x10) tiles_off
    READ_LONG (overlays_off + 0x14) lookup_off

    // number of overlay tile definitions
    SET tiles_num = (SHORT_AT (overlays_off)) * (SHORT_AT (overlays_off + 2))

    // number of bogus entries is calculated from the gap between end of tilemap entries and tile index lookup offset
    // Note: door tilemap lookup offset should be considered as well if door definitions exist
    SET bogus_num = ((lookup_off - tiles_off) / 10) - tiles_num

    // fixing bogus tile index lookup entries
    SET amount = bogus_num * 2
    DELETE_BYTES (lookup_off + tiles_num * 2) amount
    LPF a7_update_wed_offsets
      INT_VAR
        base_offset = overlays_off + 0x14
        amount      = 0 - amount
    END

    // fixing bogus tilemap entries
    SET amount = bogus_num * 10
    DELETE_BYTES (tiles_off + tiles_num * 10) amount
    LPF a7_update_wed_offsets
      INT_VAR
        base_offset = overlays_off + 0x10
        amount      = 0 - amount
    END
  END
BUT_ONLY
